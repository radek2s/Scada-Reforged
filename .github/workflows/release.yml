name: Release Scada-Reforged
on:
  push:
    tags:
      - 'v*'

jobs:

  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set version tag
        id: variables
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: 'gradle'
      - name: Build Core
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: current
          arguments: :srf-core:bootJar
      - name: Build Virtual Service
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: current
          arguments: :srf-ds-virtual:bootJar
      - name: Upload srf-core.jar
        uses: actions/upload-artifact@v3
        with:
          name: srf-core-${{ steps.variables.outputs.tag }}.jar
          path: ./srf-core/build/libs/srf-core-*.jar
      - name: Upload srf-ds-virtual.jar
        uses: actions/upload-artifact@v3
        with:
          name: srf-ds-virtual-${{ steps.variables.outputs.tag }}.jar
          path: ./srf-ds-virtual/build/libs/srf-ds-virtual-*.jar
      - uses: actions/cache@v3
        with:
          path: ./srf-core/build/libs
          key: ${{ runner.os }}-srf-core-${{ github.run_id }}
      - uses: actions/cache@v3
        with:
          path: ./srf-ds-virtual/build/libs
          key: ${{ runner.os }}-srf-ds-virtual-${{ github.run_id }}

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: srf-ui/package-lock.json
      - run: npm ci
        working-directory: srf-ui
      - run: npm run build
        working-directory: srf-ui
      - uses: actions/cache@v3
        with:
          path: ./srf-ui/dist/srf-ui
          key: ${{ runner.os }}-srf-ui-${{ github.run_id }}

  deploy-docker:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    steps:
      - uses: actions/checkout@v3
      - name: Set version tag
        id: variables
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Load srf-core build data
        uses: actions/cache@v3
        with:
          path: ./srf-core/build/libs
          key: ${{ runner.os }}-srf-core-${{ github.run_id }}
      - name: Load srf-ds-virtual build data
        uses: actions/cache@v3
        with:
          path: ./srf-ds-virtual/build/libs
          key: ${{ runner.os }}-srf-ds-virtual-${{ github.run_id }}
      - name: Load srf-ui build data
        uses: actions/cache@v3
        with:
          path: ./srf-ui/dist/srf-ui
          key: ${{ runner.os }}-srf-ui-${{ github.run_id }}
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push core
        uses: docker/build-push-action@v3
        with:
          context: ./srf-core
          push: true
          tags: radek2s/srf-core:latest, radek2s/srf-core:${{ steps.variables.outputs.tag }}
      - name: Build and push core
        uses: docker/build-push-action@v3
        with:
          context: ./srf-ds-virtual
          push: true
          tags: radek2s/srf-ds-virtual:latest, radek2s/srf-ds-virtual:${{ steps.variables.outputs.tag }}
      - name: Build and push UI
        uses: docker/build-push-action@v3
        with:
          context: ./srf-ui
          push: true
          tags: radek2s/srf-ui:latest, radek2s/srf-ui:${{ steps.variables.outputs.tag }}



